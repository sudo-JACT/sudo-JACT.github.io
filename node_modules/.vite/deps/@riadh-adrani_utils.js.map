{
  "version": 3,
  "sources": ["../../@riadh-adrani/utils/build/src/string/isEmpty/index.js", "../../@riadh-adrani/utils/build/src/string/isBlank/index.js", "../../@riadh-adrani/utils/build/src/string/capitalize/index.js", "../../@riadh-adrani/utils/build/src/string/wrap/index.js", "../../@riadh-adrani/utils/build/src/object/areEqual/areEqualShallow.js", "../../@riadh-adrani/utils/build/src/object/areEqual/index.js", "../../@riadh-adrani/utils/build/src/object/hasProperty/index.js", "../../@riadh-adrani/utils/build/src/object/isFalsy/index.js", "../../@riadh-adrani/utils/build/src/object/isFunction/index.js", "../../@riadh-adrani/utils/build/src/object/isPrimitiveType/index.js", "../../@riadh-adrani/utils/build/src/object/getType/index.js", "../../@riadh-adrani/utils/build/src/object/merge/index.js", "../../@riadh-adrani/utils/build/src/object/verify/index.js", "../../@riadh-adrani/utils/build/src/object/copy/index.js", "../../@riadh-adrani/utils/build/src/object/isTrue/index.js", "../../@riadh-adrani/utils/build/src/object/forEachKey/index.js", "../../@riadh-adrani/utils/build/src/object/pick/index.js", "../../@riadh-adrani/utils/build/src/object/omit/index.js", "../../@riadh-adrani/utils/build/src/object/copyKeys/index.js", "../../@riadh-adrani/utils/build/src/object/findKey/index.js", "../../@riadh-adrani/utils/build/src/object/reactive/createReactive.js", "../../@riadh-adrani/utils/build/src/object/haveCircularDependency/index.js", "../../@riadh-adrani/utils/build/src/string/ellipsify/index.js", "../../@riadh-adrani/utils/build/src/async/runAfter/index.js", "../../@riadh-adrani/utils/build/src/array/reactive/ReactiveArray.js", "../../@riadh-adrani/utils/build/src/array/isArrayOf/index.js", "../../@riadh-adrani/utils/build/src/array/range/index.js", "../../@riadh-adrani/utils/build/src/array/shuffle/index.js", "../../@riadh-adrani/utils/build/src/iteration/forRange/index.js", "../../@riadh-adrani/utils/build/src/array/segmentize/index.js", "../../@riadh-adrani/utils/build/src/math/isInInterval/index.js", "../../@riadh-adrani/utils/build/src/math/clamp/index.js", "../../@riadh-adrani/utils/build/src/math/random/index.js", "../../@riadh-adrani/utils/build/src/math/calcDistance/index.js", "../../@riadh-adrani/utils/build/src/time/since/index.js", "../../@riadh-adrani/utils/build/src/color/hex/index.js", "../../@riadh-adrani/utils/build/src/color/hsl/index.js", "../../@riadh-adrani/utils/build/src/color/rgb/index.js", "../../@riadh-adrani/utils/build/src/color/getType/index.js", "../../@riadh-adrani/utils/build/src/color/convert/index.js", "../../@riadh-adrani/utils/build/src/color/generate/index.js", "../../@riadh-adrani/utils/build/src/type/index.js"],
  "sourcesContent": ["import { isString } from \"../../index.js\";\n/**\n * return if a string is empty or not.\n *\n * an empty string is the one having no characters.\n * @param value\n */\nexport default function isEmpty(value) {\n    return !isString(value) || value.length === 0;\n}\n", "import { isString } from \"../../index.js\";\nimport isEmpty from \"../isEmpty/index.js\";\n/**\n * return if a string is blank or not.\n *\n * a blank string is the one having no characters after being trimmed.\n * @param value\n */\nexport default function isBlank(value) {\n    return !isString(value) || isEmpty(value.trim());\n}\n", "import isBlank from \"../isBlank/index.js\";\n/**\n * capitalize the given string.\n * @param str string\n */\nexport default function capitalize(str) {\n    if (isBlank(str)) {\n        throw \"(str) is empty or is not a string.\";\n    }\n    return str.substring(0, 1).toUpperCase() + str.substring(1);\n}\n", "/**\n * wrap a string around two others.\n * @param value input.\n * @param start start wrapper.\n * @param end end wrapper. if no value is provided, the value of the wrapper will be used instead\n */\nexport default function wrap(value, start, end = start) {\n    return `${start}${value}${end}`;\n}\n", "/**\n * Perform a shallow comparison between two objects.\n * @param obj1 first object\n * @param obj2 second object\n */\nexport default function areShallowEqual(obj1, obj2) {\n    /**\n     * compare the two object with the predefined Object.is\n     */\n    if (Object.is(obj1, obj2))\n        return true;\n    /**\n     * making sure both object are of type \"object\"\n     */\n    if (typeof obj1 !== \"object\" || typeof obj2 !== \"object\" || obj1 === null || obj2 === null)\n        return false;\n}\n", "import areShallowEqual from \"./areEqualShallow.js\";\n/**\n * perform deep comparison of two objects of any type.\n * @param obj1 first object.\n * @param obj2 second object.\n * @param depth maximum comparison depth, `10` by default. This value improve performance with large object and circular dependencies\n * @returns\n */\nexport default function areEqual(obj1, obj2, depth = 10) {\n    const shallowComparison = areShallowEqual(obj1, obj2);\n    if (typeof shallowComparison === \"boolean\")\n        return shallowComparison;\n    const key1 = Object.keys(obj1);\n    const key2 = Object.keys(obj2);\n    /**\n     * compare the number of keys\n     */\n    if (key1.length !== key2.length)\n        return false;\n    /**\n     * compare the keys identifier\n     */\n    if ([...key1].sort().join(\"\") !== [...key2].sort().join(\"\"))\n        return false;\n    /**\n     * recursively compare each key value.\n     */\n    for (let i = 0; i < key1.length; i++) {\n        const o1 = obj1[key1[i]];\n        const o2 = obj2[key1[i]];\n        const shallowComparison = areShallowEqual(o1, o2);\n        if (shallowComparison === false)\n            return false;\n        if (depth > 0) {\n            /**\n             * We have an object as the value,\n             * we recursively compare them.\n             */\n            if (!areEqual(o1, o2, depth - 1))\n                return false;\n        }\n    }\n    return true;\n}\n", "/**\n * check if the given object has the named property.\n * @param object target object\n * @param property property name\n */\nexport default function hasProperty(object, property) {\n    if ([\"string\", \"number\", \"boolean\", \"bigint\", \"undefined\", \"null\", \"symbol\"].includes(typeof object))\n        return false;\n    if ([null, undefined].includes(object))\n        return false;\n    return Object.prototype.hasOwnProperty.call(object, property);\n}\n", "/**\n * return if a value is falsy or not.\n * You can add your own values that will be tested too.\n *\n * initial falsy value are : `false`, `0`, `-0`,  `\"\"`, `null`, `undefined`, `Nan`.\n * @param value\n * @param additionalFalsyList\n */\nexport default function isFalsy(value, additionalFalsyList) {\n    const list = Array.isArray(additionalFalsyList) ? additionalFalsyList : [];\n    list.push(false, 0, -0, \"\", null, undefined, NaN);\n    return list.includes(value);\n}\n", "/**\n * check if the given object is a function.\n * @param object to be tested.\n */\nexport default function isFunction(object) {\n    return typeof object === \"function\";\n}\n", "/**\n * determine if the type of the given object is a primitive.\n * @param object target\n */\nexport default function isPrimitiveType(object) {\n    return [\"string\", \"number\", \"bigint\", \"boolean\", \"undefined\", \"symbol\", \"null\"].includes(typeof object);\n}\n", "import { isArray, isBigint, isBoolean, isNull, isNumber, isString, isSymbol, isUndefined, } from \"../index.js\";\n/**\n * returns the type of the given object\n * @param o object\n */\nconst getType = (o) => {\n    if (isNull(o))\n        return \"null\";\n    if (isUndefined(o))\n        return \"undefined\";\n    if (isNumber(o))\n        return \"number\";\n    if (isBigint(o))\n        return \"bigint\";\n    if (isString(o))\n        return \"string\";\n    if (isBoolean(o))\n        return \"boolean\";\n    if (isSymbol(o))\n        return \"symbol\";\n    if (isArray(o))\n        return \"array\";\n    return \"object\";\n};\nexport default getType;\n", "import { cast } from \"../../index.js\";\nimport getType from \"../getType/index.js\";\nimport hasProperty from \"../hasProperty/index.js\";\nimport { isArray, isObject } from \"../index.js\";\n/**\n * deeply merge two or more objects.\n * @param objects to merge.\n */\nexport default function merge(...objects) {\n    objects.forEach((o) => {\n        if (!isObject(o)) {\n            throw new Error(`All argument should be of type (object) but one is (${getType(o)})`);\n        }\n    });\n    return objects.reduce((output, object) => {\n        // we check if one/both object/s is/are array\n        if (isArray(object)) {\n            if (isArray(output)) {\n                // we merge indexes\n                const l1 = output.length;\n                const l2 = object.length;\n                for (let i = 0; i < Math.max(l1, l2); i++) {\n                    if (!hasProperty(output, i)) {\n                        output[i] = object[i];\n                    }\n                    else if (getType(cast(output)[i]) !== \"object\" ||\n                        getType(cast(object)[i]) !== \"object\") {\n                        output[i] = object[i];\n                    }\n                    else {\n                        cast(output)[i] = merge(output[i], object[i]);\n                    }\n                }\n            }\n            else {\n                // we replace output\n                return object;\n            }\n        }\n        else {\n            Object.keys(object).forEach((key) => {\n                if (!hasProperty(output, key)) {\n                    cast(output)[key] = cast(object)[key];\n                }\n                else {\n                    if (getType(cast(output)[key]) !== \"object\" ||\n                        getType(cast(object)[key]) !== \"object\") {\n                        cast(output)[key] = cast(object)[key];\n                    }\n                    else {\n                        cast(output)[key] = merge(output[key], object[key]);\n                    }\n                }\n            });\n        }\n        return output;\n    }, {});\n}\n", "/**\n * evaluate the list of statements as long as they are not equal to `false`.\n *\n * return true if all of them passed.\n *\n * a `Verifier` could be a boolean, or a function returning only false in case of failure,\n * other return values will not cause the evaluation to be interrupted.\n * @param verifiers\n */\nexport default function (...verifiers) {\n    for (const fn of verifiers) {\n        if (typeof fn === \"function\") {\n            const res = fn();\n            if (res === false)\n                return false;\n        }\n        else {\n            if (fn === false)\n                return false;\n        }\n    }\n    return true;\n}\n", "import isFalsy from \"../isFalsy/index.js\";\nimport isFunction from \"../isFunction/index.js\";\nimport isPrimitiveType from \"../isPrimitiveType/index.js\";\n/**\n * Create a new deep copy from the given object.\n * @param source Source object.\n */\nexport default function copy(source) {\n    if (isFalsy(source) || isPrimitiveType(source) || isFunction(source))\n        return source;\n    const target = (Array.isArray(source) ? [] : {});\n    Object.keys(source).forEach((key) => {\n        target[key] = copy(source[key]);\n    });\n    return target;\n}\n", "/**\n * checks if the condition provided is true.\n * @param condition comparison or function.\n */\nexport function isTrue(condition) {\n    if (typeof condition === \"boolean\") {\n        return condition;\n    }\n    if (typeof condition !== \"function\") {\n        throw \"(condition) should be a boolean or a function\";\n    }\n    const res = condition();\n    if (typeof res !== \"boolean\") {\n        throw \"(condition) result is not a boolean.\";\n    }\n    return res;\n}\n/**\n * checks if the object provided is a number.\n * @param o\n */\nexport function isNumber(o) {\n    return isTrue(typeof o === \"number\");\n}\n/**\n * checks if the object provided is a string.\n * @param o\n */\nexport function isString(o) {\n    return isTrue(typeof o === \"string\");\n}\n/**\n * checks if the object provided is an array.\n * @param o\n */\nexport function isArray(o) {\n    return isTrue(Array.isArray(o));\n}\n/**\n * checks if the object provided is an object.\n * @param o\n */\nexport function isObject(o) {\n    return isTrue(typeof o === \"object\");\n}\n/**\n * checks if the object provided is null.\n * @param o\n */\nexport function isNull(o) {\n    return isTrue(o === null);\n}\n/**\n * checks if the object provided is defined, different of `undefined` and `null`.\n *\n * @param o\n */\nexport function isDefined(o) {\n    return isTrue(!isNull(o) && !isUndefined(o));\n}\n/**\n * checks if the object provided is `undefined`.\n *\n * @param o\n */\nexport function isUndefined(o) {\n    return isTrue(typeof o === \"undefined\");\n}\n/**\n * checks if the object provided is boolean.\n *\n * @param o\n */\nexport function isBoolean(o) {\n    return isTrue(typeof o === \"boolean\");\n}\n/**\n * checks if the object provided is a bigint\n * @param o\n */\nexport function isBigint(o) {\n    return typeof o === \"bigint\";\n}\n/**\n * checks if the object provided is a symbol\n * @param o\n */\nexport function isSymbol(o) {\n    return typeof o === \"symbol\";\n}\n", "import isFunction from \"../isFunction/index.js\";\nimport { isObject } from \"../isTrue/index.js\";\n/**\n * Run a callback for each key in a Record.\n * @param callback to be executed.\n * @param object source.\n */\nexport default function (callback, object) {\n    if (!isFunction(callback)) {\n        throw `Expected a function for (callback) but found (${typeof object}).`;\n    }\n    if (!isObject(object)) {\n        throw `Expected an object for (object) but found (${typeof object}).`;\n    }\n    Object.keys(object).forEach((key, index) => callback(key, object[key], index));\n}\n", "/**\n * creates a new object with only the given keys.\n * @param object source.\n * @param keys keys to preserve\n */\nexport default function pick(object, ...keys) {\n    const out = {};\n    Object.keys(object).forEach((key) => {\n        if (keys.includes(key)) {\n            out[key] = object[key];\n        }\n    });\n    return out;\n}\n", "export default function omit(object, ...keys) {\n    const out = Object.assign({}, object);\n    Object.keys(out).forEach((key) => {\n        if (keys.includes(key)) {\n            delete out[key];\n        }\n    });\n    return out;\n}\n", "import forEachKey from \"../forEachKey/index.js\";\n/**\n * modifies the target object by copying keys from the source, excluding the provided ones.\n * @param source\n * @param target\n * @param exclude\n */\nexport default function copyKeys(source, target, ...exclude) {\n    forEachKey((key, value) => {\n        if (!exclude.includes(key)) {\n            target[key] = value;\n        }\n    }, source);\n}\n", "/**\n * find a key value pair from an object satisfying the given callback. returns `undefined` otherwise.\n * @param callback predicate to be executed for each key of the object.\n * @param object source\n * @returns an object with `key` and `value` as keys.\n */\nexport default function (callback, object) {\n    for (const k in object) {\n        const res = callback(k, object[k]);\n        if (res) {\n            return { key: k, value: object[k] };\n        }\n    }\n    return undefined;\n}\n", "import { ReactiveArray, cast } from '../../index.js';\nimport { forEachKey, isArray, isObject } from '../index.js';\n/**\n * creates a proxy reactive object,\n * that will trigger the `onValueChanged` when an internal value have changed.\n * @param object target object\n * @param onValueChanged callback\n * @returns proxy object\n */\nconst createReactive = (object, onValueChanged) => {\n    forEachKey((key, value) => {\n        if (isObject(value)) {\n            object[key] = createReactive(value, onValueChanged);\n        }\n    }, object);\n    let proxied = new Proxy(object, {\n        get: (current, key) => {\n            return current[key];\n        },\n        set: (target, key, newValue) => {\n            let transformed = newValue;\n            if (isObject(newValue)) {\n                transformed = createReactive(newValue, onValueChanged);\n            }\n            cast(target)[key] = transformed;\n            onValueChanged();\n            return true;\n        },\n    });\n    if (isArray(proxied)) {\n        proxied = new ReactiveArray(proxied, onValueChanged);\n    }\n    return proxied;\n};\nexport default createReactive;\n", "import { getType } from \"../index.js\";\n/**\n * detects if the given key have a circular dependency within.\n * @param o object\n * @param key key\n * @param visited additional objects to test against\n */\nexport const keyHasCircularDependency = (o, key, visited = new Set()) => {\n    if (![\"object\", \"array\"].includes(getType(o))) {\n        return false;\n    }\n    if (visited.has(o[key])) {\n        return true;\n    }\n    visited.add(o[key]);\n    for (const k in o[key]) {\n        if (keyHasCircularDependency(o[key], k, visited)) {\n            return true;\n        }\n    }\n    visited.delete(o[key]);\n    return false;\n};\n/**\n * detects if an object/array have a circular dependency within its structure.\n * @param o object\n */\nexport const hasCircularDependency = (o) => {\n    if (![\"object\", \"array\"].includes(getType(o))) {\n        return false;\n    }\n    for (const key in o) {\n        if (keyHasCircularDependency(o, key, new Set([o]))) {\n            return true;\n        }\n    }\n    return false;\n};\n", "import { isNumber, isString } from \"../../object/index.js\";\n/**\n * Trim and append ellipsis to the end of a string\n * if the length is superior to the maximum provided.\n * @param text input string.\n * @param max max length\n * @param ellipsis defaults to `...`\n */\nexport default function (text, max, ellipsis = \"...\") {\n    if (!isString(text))\n        throw \"(text) is not a string.\";\n    if (!isNumber(max))\n        throw \"(max) is not a number.\";\n    if (text.length <= max)\n        return text;\n    return text.substring(0, max) + ellipsis;\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport isFunction from \"../../object/isFunction/index.js\";\n/**\n * execute a timeout callback as an asynchronous function.\n * @param time delay in milliseconds.\n * @param callback function to be called.\n */\nexport default function runAfter(time, callback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve) => {\n            if (typeof time !== \"number\" || time < 0) {\n                throw \"(time) is not valid.\";\n            }\n            if (!isFunction(callback)) {\n                throw \"(callback) is not a function.\";\n            }\n            setTimeout(() => {\n                resolve(callback());\n            }, time);\n        });\n    });\n}\n", "import { areEqual, isArray } from '../../index.js';\nexport default class ReactiveArray extends Array {\n    constructor(items, onChanged) {\n        if (!isArray(items)) {\n            throw `[Utils:ReactiveArray] expected Array but got ${typeof items}`;\n        }\n        super(...items);\n        this.onChanged = () => 0;\n        this.onChanged = onChanged;\n    }\n    get items() {\n        return [...this];\n    }\n    push(...items) {\n        const count = super.push(...items);\n        if (items.length > 0) {\n            this.onChanged();\n        }\n        return count;\n    }\n    pop() {\n        const before = this.length;\n        const item = super.pop();\n        const after = this.length;\n        if (before !== after) {\n            this.onChanged();\n        }\n        return item;\n    }\n    shift() {\n        const before = this.length;\n        const item = super.shift();\n        const after = this.length;\n        if (before !== after) {\n            this.onChanged();\n        }\n        return item;\n    }\n    unshift(...items) {\n        const before = this.length;\n        const count = super.unshift(...items);\n        const after = this.length;\n        if (before !== after) {\n            this.onChanged();\n        }\n        return count;\n    }\n    reverse() {\n        const items = super.reverse();\n        if (this.length > 1) {\n            this.onChanged();\n        }\n        return items;\n    }\n    // TODO splice not working\n    sort(compareFn) {\n        const old = [...this.items];\n        const sorted = super.sort(compareFn);\n        if (!areEqual(old, this.items)) {\n            this.onChanged();\n        }\n        return sorted;\n    }\n    fill(value, start, end) {\n        const old = [...this.items];\n        const filled = super.fill(value, start, end);\n        if (!areEqual(old, filled.items)) {\n            this.onChanged();\n        }\n        return filled;\n    }\n    copyWithin(target, start, end) {\n        const old = [...this.items];\n        const updated = super.copyWithin(target, start, end);\n        if (!areEqual(old, this.items)) {\n            this.onChanged();\n        }\n        return updated;\n    }\n}\n/**\n * checks if the provided object is instance of `ReactiveArray`\n * @param o object\n */\nexport const isReactiveArray = (o) => {\n    return o instanceof ReactiveArray;\n};\n/**\n * create a new reactive array instance\n * @param array array to transform\n * @param onChanged change handler\n */\nexport const reactiveArray = (array, onChanged) => new ReactiveArray(array, onChanged);\n", "import { isFunction } from \"../../object/index.js\";\n/**\n * check if each element of the array fullfil the provided condition.\n * @param array source\n * @param condition a type or a callback to be executed.\n */\nexport default function (array, condition) {\n    if (!Array.isArray(array))\n        throw \"(array) should be of type array.\";\n    if (!isFunction(condition) && typeof condition !== \"string\")\n        throw \"(verifier) should be a type as string or a callback.\";\n    return array.every((item) => {\n        if (typeof condition === \"string\") {\n            if (typeof item !== condition)\n                return false;\n        }\n        else {\n            if (!condition(item))\n                return false;\n        }\n        return true;\n    });\n}\n", "/**\n * generate an array containing the numbers in `start..end`.\n * @param end ending number.\n * @param start starting point. 0 by default.\n * @throw when start > end.\n */\nexport default function range(start, end) {\n    if (typeof end != \"number\" || typeof start != \"number\") {\n        throw \"(end) or (start) is/are not of type number.\";\n    }\n    if (start > end) {\n        throw \"start number is greater than the end one.\";\n    }\n    const output = [];\n    for (let i = start; i < end; i++) {\n        output.push(i);\n    }\n    return output;\n}\n", "/**\n * create a new shuffled array from the input.\n * @param input initial array\n * @see https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n */\nexport default function shuffle(input) {\n    let currentIndex = input.length, randomIndex;\n    const array = input;\n    while (currentIndex != 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex--;\n        [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n    return array;\n}\n", "import { isFunction, isNumber } from \"../../object/index.js\";\n/**\n * execute a callback for each index of the range specified.\n *\n * returning a non-`undefined` value will cause the loop to break and return that value as a result.\n * @param  start starting number. 0 by default.\n * @param  end ending number.\n * @param callback callback for each index.\n * @param step stepping number, 1 by default.\n */\nexport default function forRange(callback, start, end, step = 1) {\n    if (!isFunction(callback))\n        throw \"(callback) is not a function.\";\n    if (!isNumber(end))\n        throw \"(end) is not a number.\";\n    if (!isNumber(start))\n        throw \"(start) is not a number.\";\n    if (!isNumber(step))\n        throw \"(step) is not a number.\";\n    for (let i = start; i < end; i = i + step) {\n        const res = callback(i);\n        if (res != undefined)\n            return res;\n    }\n}\n", "import { forRange } from \"../../iteration/index.js\";\n/**\n * divide an array into `segments` (smaller arrays).\n * @param array source\n * @param segmentLength segment length\n */\nexport default function (array, segmentLength) {\n    const output = [];\n    forRange((index) => {\n        output.push(array.slice(index, index + segmentLength));\n    }, 0, array.length, segmentLength);\n    return output;\n}\n", "/**\n * Check if the given value is within the [`min`,`max`] interval.\n * @param min minimum value (included)\n * @param value tested value\n * @param max maximum value (included)\n */\nexport default function (min, value, max) {\n    if (typeof min !== \"number\")\n        throw \"(min) is not a number.\";\n    if (typeof max !== \"number\")\n        throw \"(max) is not a number.\";\n    if (typeof value !== \"number\")\n        throw \"(value) is not a number.\";\n    if (min > max)\n        throw \"(min) is greater than (max).\";\n    return min <= value && value <= max;\n}\n", "/**\n * clamp a number between two values.\n * @param min minimum\n * @param n number\n * @param max maximum\n */\nexport default function (min, n, max) {\n    if (typeof min !== \"number\")\n        throw \"(min) is not a number\";\n    if (typeof max !== \"number\")\n        throw \"(max) is not a number\";\n    if (typeof n !== \"number\")\n        throw \"(n) is not a number\";\n    if (min > max)\n        throw \"(min) is greater than (max)\";\n    return Math.min(Math.max(n, min), max);\n}\n", "import { isNumber } from \"../../object/index.js\";\n/**\n * generate a random number in a given interval.\n * @param min minimum value.\n * @param max maximum value, exclusive.\n * @param float allow float values. `false` by default.\n */\nexport default function (min, max, float = false) {\n    if (!isNumber(min))\n        throw \"(min) is not a number\";\n    if (!isNumber(max))\n        throw \"(max) is not a number\";\n    if (min > max) {\n        throw \"(min) is greater than (max).\";\n    }\n    if (min === max) {\n        return min;\n    }\n    const rnd = Math.random() * (max - min) + min;\n    return float ? Math.floor(rnd) : rnd;\n}\n", "/**\n * calculate distance between two points in a 2d space with given coordinates.\n * @param x1\n * @param y1\n * @param x2\n * @param y2\n */\nexport function calcDistance(x1, y1, x2, y2) {\n    if (typeof x1 !== \"number\")\n        throw \"(x1) is not a number\";\n    if (typeof x2 !== \"number\")\n        throw \"(x2) is not a number\";\n    if (typeof y1 !== \"number\")\n        throw \"(y1) is not a number\";\n    if (typeof y2 !== \"number\")\n        throw \"(y2) is not a number\";\n    return Math.sqrt(Math.abs(x1 - x2) ** 2 + Math.abs(y1 - y2) ** 2);\n}\n/**\n * calculate distance between two points in a 3d space with given coordinates.\n * @param x1\n * @param y1\n * @param z1\n * @param x2\n * @param y2\n * @param z2\n * @returns\n */\nexport function calcDistance3d(x1, y1, z1, x2, y2, z2) {\n    if (typeof x1 !== \"number\")\n        throw \"(x1) is not a number\";\n    if (typeof x2 !== \"number\")\n        throw \"(x2) is not a number\";\n    if (typeof y1 !== \"number\")\n        throw \"(y1) is not a number\";\n    if (typeof y2 !== \"number\")\n        throw \"(y2) is not a number\";\n    if (typeof z1 !== \"number\")\n        throw \"(z1) is not a number\";\n    if (typeof z2 !== \"number\")\n        throw \"(z2) is not a number\";\n    return Math.sqrt(Math.abs(x1 - x2) ** 2 + Math.abs(y1 - y2) ** 2 + Math.abs(z1 - z2) ** 2);\n}\n", "export const SECOND = 1000;\nexport const MINUTE = SECOND * 60;\nexport const HOUR = MINUTE * 60;\nexport const DAY = HOUR * 24;\nexport const WEEK = DAY * 7;\nexport const MONTH = DAY * 30;\nexport const YEAR = DAY * 365;\n/**\n * Count the time since date with a given time of unit (in milliseconds).\n * @param time date as a number.\n * @param timeUnit the unit of time in milliseconds.\n * @param singular the word to be appended when the result is singular.\n * @param plural the word to be appended when the result is plural.\n */\nexport function timeUnitSince(time, timeUnit, singular, plural) {\n    if (typeof time !== \"number\") {\n        throw new Error(\"time is not a number.\");\n    }\n    if (time > Date.now()) {\n        throw new Error(\"the given time is superior to the current time.\");\n    }\n    if (typeof timeUnit !== \"number\" || timeUnit < 0) {\n        throw new Error(\"time unit is not a positive number.\");\n    }\n    const delta = Date.now() - time;\n    const count = Math.trunc(delta / timeUnit);\n    return {\n        count,\n        formatted: `${count} ${count < 2 ? singular : plural}`,\n    };\n}\n/**\n * Count the time since a given date in seconds.\n * @param time date.\n * @param plural `seconds` by default\n * @param singular `second` by default\n */\nexport function secondsSince(time, singular = \"second\", plural = \"seconds\") {\n    return timeUnitSince(time, SECOND, singular, plural);\n}\n/**\n * Count the time since a given date in minutes.\n * @param time date.\n * @param plural `minutes` by default\n * @param singular `minute` by default\n */\nexport function minutesSince(time, singular = \"minute\", plural = \"minutes\") {\n    return timeUnitSince(time, MINUTE, singular, plural);\n}\n/**\n * Count the time since a given date in hours.\n * @param time date.\n * @param plural `hours` by default\n * @param singular `hour` by default\n */\nexport function hoursSince(time, singular = \"hour\", plural = \"hours\") {\n    return timeUnitSince(time, HOUR, singular, plural);\n}\n/**\n * Count the time since a given date in days.\n * @param time date.\n * @param plural `days` by default\n * @param singular `day` by default\n */\nexport function daysSince(time, singular = \"day\", plural = \"days\") {\n    return timeUnitSince(time, DAY, singular, plural);\n}\n/**\n * Count the time since a given date in weeks.\n * @param time date.\n * @param plural `weeks` by default\n * @param singular `week` by default\n */\nexport function weeksSince(time, singular = \"week\", plural = \"weeks\") {\n    return timeUnitSince(time, WEEK, singular, plural);\n}\n/**\n * Count the time since a given date in months.\n * @param time date.\n * @param plural `months` by default\n * @param singular `month` by default\n */\nexport function monthsSince(time, singular = \"month\", plural = \"months\") {\n    return timeUnitSince(time, MONTH, singular, plural);\n}\n/**\n * Count the time since a given date in years.\n * @param time date.\n * @param plural `years` by default\n * @param singular `year` by default\n */\nexport function yearsSince(time, singular = \"year\", plural = \"years\") {\n    return timeUnitSince(time, YEAR, singular, plural);\n}\n/**\n * Count the time since a given date an return the appropriate format with additional information.\n * @param time date.\n * @param _second array of [`singular`,`plural`]\n * @param _minute array of [`singular`,`plural`]\n * @param _hour array of [`singular`,`plural`]\n * @param _day array of [`singular`,`plural`]\n * @param _week array of [`singular`,`plural`]\n * @param _month array of [`singular`,`plural`]\n * @param _year array of [`singular`,`plural`]\n */\nexport function since(time, _second = [\"second\", \"seconds\"], _minute = [\"minute\", \"minutes\"], _hour = [\"hour\", \"hours\"], _day = [\"day\", \"days\"], _week = [\"week\", \"weeks\"], _month = [\"month\", \"months\"], _year = [\"year\", \"years\"]) {\n    if (typeof time !== \"number\") {\n        throw new Error(\"time is not a number.\");\n    }\n    let t = time;\n    const years = yearsSince(t, ..._year);\n    t += years.count * YEAR;\n    const months = monthsSince(t, ..._month);\n    t += months.count * MONTH;\n    const weeks = weeksSince(t, ..._week);\n    t += weeks.count * WEEK;\n    const days = daysSince(t, ..._day);\n    t += days.count * DAY;\n    const hours = hoursSince(t, ..._hour);\n    t += hours.count * HOUR;\n    const minutes = minutesSince(t, ..._minute);\n    t += minutes.count * MINUTE;\n    const seconds = secondsSince(t, ..._second);\n    const res = {\n        formatted: \"\",\n        seconds,\n        minutes,\n        hours,\n        days,\n        weeks,\n        months,\n        years,\n    };\n    res.formatted = (() => {\n        if (years.count > 0)\n            return years.formatted;\n        else if (months.count > 0)\n            return months.formatted;\n        else if (weeks.count > 0)\n            return weeks.formatted;\n        else if (days.count > 0)\n            return days.formatted;\n        else if (hours.count > 0)\n            return hours.formatted;\n        else if (minutes.count > 0)\n            return minutes.formatted;\n        else\n            return seconds.formatted;\n    })();\n    return res;\n}\n", "import { isBlank } from \"../../string/index.js\";\n/**\n * Determine if the given string is a hex color.\n * @param color value\n */\nexport function isHexColor(color) {\n    if (isBlank(color))\n        return false;\n    const three = /^#[0-9|a|A|b|B|c|C|d|D|e|E|f|F]{3}$/;\n    const six = /^#[0-9|a|A|b|B|c|C|d|D|e|E|f|F]{6}$/;\n    const eight = /^#[0-9|a|A|b|B|c|C|d|D|e|E|f|F]{8}$/;\n    return three.test(color) || six.test(color) || eight.test(color);\n}\n", "import { isBlank } from \"../../string/index.js\";\nimport { isInInterval } from \"../../math/index.js\";\n/**\n * generate an hsla color\n * @param h hue\n * @param s saturation\n * @param l lightness\n * @param a alpha\n */\nexport function hsla(h, s, l, a = 1) {\n    if (!isInInterval(0, h, 360))\n        throw \"(hue) should be a number between 0 and 360\";\n    if (!isInInterval(0, l, 100))\n        throw \"(lightness) should be a number between 0 and 100\";\n    if (!isInInterval(0, s, 100))\n        throw \"(saturation) should be a number between 0 and 100\";\n    if (!isInInterval(0, a, 1))\n        throw \"(alpha) should be a number between 0 and 1\";\n    return `hsla(${h}deg ${s}% ${l}% / ${a})`;\n}\nexport const HSL_REGEX = /^hsl\\((\\d{1,3})(\\.\\d+){0,1}deg (\\d{1,3})(\\.\\d+){0,1}% (\\d{1,3})(\\.\\d+){0,1}%\\)$/;\nexport const HSLA_REGEX = /^hsla\\((\\d{1,3})(\\.\\d+){0,1}deg (\\d{1,3})(\\.\\d+){0,1}% (\\d{1,3})(\\.\\d+){0,1}%( \\/ (\\d{1,3})(\\.\\d+){0,1}){0,1}\\)$/;\n/**\n * check if the given color is of an hsl form\n *\n * `hsl(99deg 99% 99%)`\n *\n * note that hue, saturation, lightness values are not checked.\n * @param color target\n */\nexport function isHslForm(color) {\n    return isBlank(color) ? false : HSL_REGEX.test(color);\n}\n/**\n * check if the given color is of an hsla form\n *\n * `hsla(99deg 99% 99% / 0.99)`\n *\n * note that hue, saturation, lightness and alpha values are not checked.\n * @param color target\n */\nexport function isHslaForm(color) {\n    return isBlank(color) ? false : HSLA_REGEX.test(color);\n}\n/**\n * extract color data from an hsl/a color form.\n *\n * if the color has an invalid type, an error will be thrown.\n *\n * @param color source\n */\nexport function extractDataFromHSL(color) {\n    if (isHslaForm(color)) {\n        return color\n            .slice(5, -1)\n            .replace(\"%\", \"\")\n            .replace(\"deg\", \"\")\n            .replace(\"/\", \"\")\n            .replace(\"  \", \" \")\n            .split(\" \")\n            .map((i) => parseFloat(i.trim()));\n    }\n    if (isHslForm(color)) {\n        return color\n            .slice(4, -1)\n            .replace(\"%\", \"\")\n            .replace(\"deg\", \"\")\n            .replace(\"/\", \"\")\n            .split(\" \")\n            .map((i) => parseFloat(i.trim()));\n    }\n    throw \"(color) is not of a HSL/HSLA form.\";\n}\n/**\n * Check if the given color is in an HSL or HSLA format:\n * - `hsl(h,s,l)`\n * - `hsla(h,s,l,a)`\n * @param color target\n */\nexport function isHslColor(color) {\n    if (isBlank(color)) {\n        return false;\n    }\n    if (isHslForm(color)) {\n        const [h, s, l] = extractDataFromHSL(color);\n        if (360 < h || h < 0)\n            return false;\n        if (100 < s || s < 0)\n            return false;\n        if (100 < l || l < 0)\n            return false;\n        return true;\n    }\n    else if (isHslaForm(color)) {\n        const [h, s, l, a] = extractDataFromHSL(color);\n        if (360 < h || h < 0)\n            return false;\n        if (100 < s || s < 0)\n            return false;\n        if (100 < l || l < 0)\n            return false;\n        if (a !== undefined && (1 < a || a < 0)) {\n            return false;\n        }\n        return true;\n    }\n    return false;\n}\n", "import { isBlank } from \"../../string/index.js\";\nimport { isInInterval } from \"../../math/index.js\";\n/**\n * generate an rgba color :\n *\n * `rgba(255,255,255,1)`\n *\n * @param r red\n * @param g green\n * @param b blue\n * @param a alpha\n */\nexport function rgba(r, g, b, a = 1) {\n    if (!isInInterval(0, r, 255))\n        throw \"(red) should be a number between 0 and 255\";\n    if (!isInInterval(0, b, 255))\n        throw \"(green) should be a number between 0 and 255\";\n    if (!isInInterval(0, g, 255))\n        throw \"(blue) should be a number between 0 and 255\";\n    if (!isInInterval(0, a, 1))\n        throw \"(alpha) should be a number between 0 and 1\";\n    return `rgba(${r},${g},${b},${a})`;\n}\nexport const RGB_REGEX = /^rgb\\((\\d{1,3})(\\.\\d+){0,1},( ){0,1}(\\d{1,3})(\\.\\d+){0,1},( ){0,1}(\\d{1,3})(\\.\\d+){0,1}\\)$/;\nexport const RGBA_REGEX = /^rgba\\((\\d{1,3})(\\.\\d+){0,1},( ){0,1}(\\d{1,3})(\\.\\d+){0,1},( ){0,1}(\\d{1,3})(\\.\\d+){0,1}(,( ){0,1}(\\d{1})(\\.\\d+){0,1}){0,1}\\)$/;\n/**\n * check if the given color is of an rgb form\n *\n * `rgb(255, 255, 255)`\n *\n * note that red, green and blue values are not checked\n * @param color target\n */\nexport function isRgbForm(color) {\n    return isBlank(color) ? false : RGB_REGEX.test(color);\n}\n/**\n * check if the given color is of an rgba form\n *\n * `rgba(255, 255, 255, 0.99)`\n *\n * note that red, green, blue and alpha values are not checked.\n * @param color target\n */\nexport function isRgbaForm(color) {\n    return isBlank(color) ? false : RGBA_REGEX.test(color);\n}\n/**\n * extract color data from an rgb/a color form.\n *\n * if the color has an invalid type, an error will be thrown.\n *\n * @param color source\n */\nexport function extractDataFromRGB(color) {\n    if (isRgbaForm(color)) {\n        return color\n            .slice(5, -1)\n            .split(\",\")\n            .map((i) => parseFloat(i.trim()));\n    }\n    if (isRgbForm(color)) {\n        return color\n            .slice(4, -1)\n            .split(\",\")\n            .map((i) => parseFloat(i.trim()));\n    }\n    throw \"(color) is not of a RGB/RGBA form.\";\n}\n/**\n * Check if the given color is in an RGB or RGBA format:\n * - `rgb(r,g,b)`\n * - `rgba(r,g,b,a)`\n * @param color\n */\nexport function isRgbColor(color) {\n    if (isBlank(color)) {\n        return false;\n    }\n    if (isRgbForm(color)) {\n        const [r, g, b] = extractDataFromRGB(color);\n        for (const c of [r, g, b]) {\n            if (!isInInterval(0, c, 256))\n                return false;\n        }\n        return true;\n    }\n    else if (isRgbaForm(color)) {\n        const [r, g, b, a] = extractDataFromRGB(color);\n        for (const c of [r, g, b]) {\n            if (!isInInterval(0, c, 256))\n                return false;\n        }\n        if (a !== undefined && !isInInterval(0, a, 1))\n            return false;\n        return true;\n    }\n    return false;\n}\n", "import { isHexColor } from \"../hex/index.js\";\nimport { isHslColor } from \"../hsl/index.js\";\nimport { isRgbColor } from \"../rgb/index.js\";\nexport const HEX = \"hex\";\nexport const HSL = \"hsl\";\nexport const RGB = \"rgb\";\nexport const UNKNOWN = \"unknown\";\n/**\n * Try to guess the correct screen color type :\n * `hex`, `hsl`, `rgb` or `unknown`\n * @param color target\n */\nexport function getColorType(color) {\n    return isHexColor(color) ? HEX : isHslColor(color) ? HSL : isRgbColor(color) ? RGB : UNKNOWN;\n}\n", "// https://css-tricks.com/converting-color-spaces-in-javascript//\nimport { getColorType, HEX, HSL, RGB, UNKNOWN } from \"../getType/index.js\";\nimport { extractDataFromHSL } from \"../hsl/index.js\";\nimport { extractDataFromRGB } from \"../rgb/index.js\";\n/**\n * convert given `H S L` values to `R G B`\n * @param h hue\n * @param s saturation\n * @param l lightness\n */\nexport function hslToRgb(h, s, l) {\n    // Must be fractions of 1\n    s /= 100;\n    l /= 100;\n    h = h % 360;\n    const c = (1 - Math.abs(2 * l - 1)) * s, x = c * (1 - Math.abs(((h / 60) % 2) - 1)), m = l - c / 2;\n    let r = 0, g = 0, b = 0;\n    if (0 <= h && h < 60) {\n        r = c;\n        g = x;\n        b = 0;\n    }\n    else if (60 <= h && h < 120) {\n        r = x;\n        g = c;\n        b = 0;\n    }\n    else if (120 <= h && h < 180) {\n        r = 0;\n        g = c;\n        b = x;\n    }\n    else if (180 <= h && h < 240) {\n        r = 0;\n        g = x;\n        b = c;\n    }\n    else if (240 <= h && h < 300) {\n        r = x;\n        g = 0;\n        b = c;\n    }\n    else if (300 <= h && h < 360) {\n        r = c;\n        g = 0;\n        b = x;\n    }\n    r = Math.round((r + m) * 255);\n    g = Math.round((g + m) * 255);\n    b = Math.round((b + m) * 255);\n    return [r, g, b];\n}\n/**\n * convert given `R G B` values to `H S L`\n * @param r red\n * @param g green\n * @param b blue\n */\nexport function rgbToHsl(r, g, b) {\n    // Make r, g, and b fractions of 1\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    // Find greatest and smallest channel values\n    const cMin = Math.min(r, g, b), cMax = Math.max(r, g, b), delta = cMax - cMin;\n    let h = 0, s = 0, l = 0;\n    // Calculate hue\n    // No difference\n    if (delta == 0)\n        h = 0;\n    // Red is max\n    else if (cMax == r)\n        h = ((g - b) / delta) % 6;\n    // Green is max\n    else if (cMax == g)\n        h = (b - r) / delta + 2;\n    // Blue is max\n    else\n        h = (r - g) / delta + 4;\n    h = Math.round(h * 60);\n    // Make negative hues positive behind 360°\n    if (h < 0)\n        h += 360;\n    // Calculate lightness\n    l = (cMax + cMin) / 2;\n    // Calculate saturation\n    s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\n    // Multiply l and s by 100\n    s = +(s * 100).toFixed(2);\n    l = +(l * 100).toFixed(2);\n    return [round(h), round(s), round(l)];\n}\n/**\n * convert given `R G B` values to `#rrggbbaa`\n * @param r red\n * @param g green\n * @param b blue\n * @param a alpha\n */\nexport function rgbToHex(r, g, b, a = 1) {\n    function formatHex(c) {\n        const hex = Math.round(c).toString(16);\n        return hex.length == 1 ? \"0\" + hex : hex;\n    }\n    return \"#\" + formatHex(r) + formatHex(g) + formatHex(b) + formatHex(a * 255);\n}\nconst round = (n) => {\n    return Math.round(n * 100) / 100;\n};\n/**\n * convert a given css declaration to another one.\n *\n * supported types : `HEX` | `RGB` | `HSL`\n *\n * @param color source\n * @param to target type\n */\nexport function convertColor(color, to) {\n    const type = getColorType(color);\n    if (type === UNKNOWN) {\n        return color;\n    }\n    if (![HEX, HSL, RGB].includes(to))\n        return color;\n    if (to === type)\n        return color;\n    let [r, g, b, a] = [0, 0, 0, 1];\n    if (type === HEX) {\n        const c = color.substring(1);\n        const l = c.length;\n        if (l === 3) {\n            r = parseInt(c[0] + c[0], 16);\n            g = parseInt(c[1] + c[1], 16);\n            b = parseInt(c[2] + c[2], 16);\n        }\n        else if (l >= 6) {\n            r = parseInt(c.substring(0, 2), 16);\n            g = parseInt(c.substring(2, 4), 16);\n            b = parseInt(c.substring(4, 6), 16);\n            if (l === 8) {\n                a = round(parseInt(c.substring(6), 16) / 256);\n            }\n        }\n    }\n    else if (type === HSL) {\n        const [h, s, l, _a] = extractDataFromHSL(color);\n        if (_a !== undefined) {\n            a = _a;\n        }\n        [r, g, b] = hslToRgb(h, s, l);\n    }\n    else if (type === RGB) {\n        const [_r, _g, _b, _a] = extractDataFromRGB(color);\n        if (_a !== undefined) {\n            a = _a;\n        }\n        [r, g, b] = [_r, _g, _b];\n    }\n    if (to === RGB) {\n        return `rgba(${r},${g},${b},${a})`;\n    }\n    else if (to === HSL) {\n        const [h, s, l] = rgbToHsl(r, g, b);\n        return `hsla(${h}deg ${s}% ${l}% / ${a})`;\n    }\n    else if (to === HEX) {\n        return rgbToHex(r, g, b, a);\n    }\n    return color;\n}\n", "import { getColorType } from \"../getType/index.js\";\nimport { convertColor } from \"../convert/index.js\";\nimport { extractDataFromRGB } from \"../rgb/index.js\";\nimport { extractDataFromHSL, hsla } from \"../hsl/index.js\";\nimport { isInInterval } from \"../../math/index.js\";\nfunction normalizeColorToRgbOrThrow(color) {\n    const rgb = convertColor(color, \"rgb\");\n    const t = getColorType(rgb);\n    if (t === \"unknown\") {\n        throw \"unable to specify (color) type, maybe it is badly formatted ?\";\n    }\n    return rgb;\n}\nfunction normalizeColorToHSLOrThrow(color) {\n    const rgb = convertColor(color, \"hsl\");\n    const type = getColorType(rgb);\n    if (type === \"unknown\") {\n        throw \"unable to specify (color) type, maybe it is badly formatted ?\";\n    }\n    return rgb;\n}\n/**\n * generates a safe color that could be paired with the given one,\n * as a text or background color.\n *\n * @param color source\n * @param light color for dark colors\n * @param dark color for light colors\n */\nexport function generateContrastSafeColor(color, light = \"#fff\", dark = \"#000\") {\n    const c = normalizeColorToRgbOrThrow(color);\n    const [r, g, b] = extractDataFromRGB(c);\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    return yiq >= 128 ? dark : light;\n}\n/**\n * generates a complementary color.\n * @param color source\n * @param type result color type\n */\nexport function generateComplementaryColor(color, type) {\n    const c = normalizeColorToHSLOrThrow(color);\n    const [_h, _s, _l, _a] = extractDataFromHSL(c);\n    const [h, s, l, a] = [(_h + 180) % 360, _s, _l, _a !== null && _a !== void 0 ? _a : 1];\n    const result = `hsla(${h}deg ${s}% ${l}% / ${a})`;\n    return convertColor(result, type || \"hsl\");\n}\n/**\n * generates a tonal palette.\n * @param color\n * @param type output colors type\n * @see https://m3.material.io/styles/color/the-color-system/key-colors-tones#6bdb9471-b70d-42c9-8ace-76743c1fff13\n */\nexport function generateColorTonalPalette(color, type) {\n    const c = normalizeColorToHSLOrThrow(color);\n    const palette = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 95, 99, 100];\n    const [h, s, , a] = extractDataFromHSL(c);\n    const t = type !== null && type !== void 0 ? type : \"hsl\";\n    const colorPalette = {};\n    palette.forEach((tone) => {\n        const colorTone = hsla(h, s, tone, a !== null && a !== void 0 ? a : 1);\n        colorPalette[tone] = convertColor(colorTone, t);\n    });\n    return colorPalette;\n}\n/**\n * generate the same color with a modified opacity.\n * @param color source\n * @param opacity opacity\n * @param type output color type\n */\nexport function changeColorOpacity(color, opacity, type) {\n    const c = normalizeColorToHSLOrThrow(color);\n    if (!isInInterval(0, opacity, 1))\n        throw \"(opacity) should be a number between 0 and 1.\";\n    const [h, s, l] = extractDataFromHSL(c);\n    return convertColor(hsla(h, s, l, opacity), type !== null && type !== void 0 ? type : \"hex\");\n}\n", "/**\n * force cast an object to the given generic type.\n * @param obj source\n */\nexport const cast = (obj) => {\n    return obj;\n};\n"],
  "mappings": "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",
  "names": ["shallowComparison"]
}
