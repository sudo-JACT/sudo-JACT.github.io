export type Condition = boolean | (() => boolean);
/**
 * checks if the condition provided is true.
 * @param condition comparison or function.
 */
export declare function isTrue(condition: Condition): boolean;
/**
 * checks if the object provided is a number.
 * @param o
 */
export declare function isNumber(o: unknown): boolean;
/**
 * checks if the object provided is a string.
 * @param o
 */
export declare function isString(o: unknown): boolean;
/**
 * checks if the object provided is an array.
 * @param o
 */
export declare function isArray(o: unknown): boolean;
/**
 * checks if the object provided is an object.
 * @param o
 */
export declare function isObject(o: unknown): boolean;
/**
 * checks if the object provided is null.
 * @param o
 */
export declare function isNull(o: unknown): boolean;
/**
 * checks if the object provided is defined, different of `undefined` and `null`.
 *
 * @param o
 */
export declare function isDefined(o: unknown): boolean;
/**
 * checks if the object provided is `undefined`.
 *
 * @param o
 */
export declare function isUndefined(o: unknown): boolean;
/**
 * checks if the object provided is boolean.
 *
 * @param o
 */
export declare function isBoolean(o: unknown): boolean;
/**
 * checks if the object provided is a bigint
 * @param o
 */
export declare function isBigint(o: unknown): boolean;
/**
 * checks if the object provided is a symbol
 * @param o
 */
export declare function isSymbol(o: unknown): boolean;
