/**
 * generate an rgba color :
 *
 * `rgba(255,255,255,1)`
 *
 * @param r red
 * @param g green
 * @param b blue
 * @param a alpha
 */
export declare function rgba(r: number, g: number, b: number, a?: number): string;
export declare const RGB_REGEX: RegExp;
export declare const RGBA_REGEX: RegExp;
/**
 * check if the given color is of an rgb form
 *
 * `rgb(255, 255, 255)`
 *
 * note that red, green and blue values are not checked
 * @param color target
 */
export declare function isRgbForm(color: string): boolean;
/**
 * check if the given color is of an rgba form
 *
 * `rgba(255, 255, 255, 0.99)`
 *
 * note that red, green, blue and alpha values are not checked.
 * @param color target
 */
export declare function isRgbaForm(color: string): boolean;
/**
 * extract color data from an rgb/a color form.
 *
 * if the color has an invalid type, an error will be thrown.
 *
 * @param color source
 */
export declare function extractDataFromRGB(color: string): number[];
/**
 * Check if the given color is in an RGB or RGBA format:
 * - `rgb(r,g,b)`
 * - `rgba(r,g,b,a)`
 * @param color
 */
export declare function isRgbColor(color: string): boolean;
